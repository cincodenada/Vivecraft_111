--- a/net/minecraft/client/gui/GuiSlot.java
+++ b/net/minecraft/client/gui/GuiSlot.java
@@ -11,19 +11,19 @@
 public abstract class GuiSlot
 {
     protected final Minecraft mc;
-    protected int width;
-    protected int height;
+    public int width;
+    public int height;
 
     /** The top of the slot container. Affects the overlays and scrolling. */
-    protected int top;
+    public int top;
 
     /** The bottom of the slot container. Affects the overlays and scrolling. */
-    protected int bottom;
-    protected int right;
-    protected int left;
+    public int bottom;
+    public int right;
+    public int left;
 
     /** The height of a slot. */
-    protected final int slotHeight;
+    public final int slotHeight;
 
     /** The buttonID of the button used to scroll up */
     private int scrollUpButtonID;
@@ -58,7 +58,7 @@
      */
     protected boolean showSelectionBox = true;
     protected boolean hasListHeader;
-    protected int headerPadding;
+    public int headerPadding;
     private boolean enabled = true;
 
     public GuiSlot(Minecraft mcIn, int width, int height, int topIn, int bottomIn, int slotHeightIn)
@@ -222,7 +222,11 @@
     public void drawScreen(int mouseXIn, int mouseYIn, float partialTicks)
     {
         if (this.visible)
-        {
+     {
+        	//VIVCRAFT
+        	 handleMouseInput();
+        	//END
+        	 
             this.mouseX = mouseXIn;
             this.mouseY = mouseYIn;
             this.drawBackground();
@@ -233,15 +237,18 @@
             GlStateManager.disableFog();
             Tessellator tessellator = Tessellator.getInstance();
             VertexBuffer vertexbuffer = tessellator.getBuffer();
-            this.mc.getTextureManager().bindTexture(Gui.OPTIONS_BACKGROUND);
-            GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
-            float f = 32.0F;
-            vertexbuffer.begin(7, DefaultVertexFormats.POSITION_TEX_COLOR);
-            vertexbuffer.pos((double)this.left, (double)this.bottom, 0.0D).tex((double)((float)this.left / 32.0F), (double)((float)(this.bottom + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
-            vertexbuffer.pos((double)this.right, (double)this.bottom, 0.0D).tex((double)((float)this.right / 32.0F), (double)((float)(this.bottom + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
-            vertexbuffer.pos((double)this.right, (double)this.top, 0.0D).tex((double)((float)this.right / 32.0F), (double)((float)(this.top + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
-            vertexbuffer.pos((double)this.left, (double)this.top, 0.0D).tex((double)((float)this.left / 32.0F), (double)((float)(this.top + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
-            tessellator.draw();
+            //FORGE
+//            this.mc.getTextureManager().bindTexture(Gui.OPTIONS_BACKGROUND);
+//            GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
+//            float f = 32.0F;
+//            vertexbuffer.begin(7, DefaultVertexFormats.POSITION_TEX_COLOR);
+//            vertexbuffer.pos((double)this.left, (double)this.bottom, 0.0D).tex((double)((float)this.left / 32.0F), (double)((float)(this.bottom + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
+//            vertexbuffer.pos((double)this.right, (double)this.bottom, 0.0D).tex((double)((float)this.right / 32.0F), (double)((float)(this.bottom + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
+//            vertexbuffer.pos((double)this.right, (double)this.top, 0.0D).tex((double)((float)this.right / 32.0F), (double)((float)(this.top + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
+//            vertexbuffer.pos((double)this.left, (double)this.top, 0.0D).tex((double)((float)this.left / 32.0F), (double)((float)(this.top + (int)this.amountScrolled) / 32.0F)).color(32, 32, 32, 255).endVertex();
+//            tessellator.draw();
+            this.drawContainerBackground(tessellator);
+            ///
             int k = this.left + this.width / 2 - this.getListWidth() / 2 + 2;
             int l = this.top + 4 - (int)this.amountScrolled;
 
@@ -313,11 +320,25 @@
         }
     }
 
+        protected void drawContainerBackground(Tessellator tessellator)
+        {
+            VertexBuffer buffer = tessellator.getBuffer();
+            this.mc.getTextureManager().bindTexture(Gui.OPTIONS_BACKGROUND);
+            GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
+            float f = 32.0F;
+            buffer.begin(7, DefaultVertexFormats.POSITION_TEX_COLOR);
+            buffer.pos((double)this.left,  (double)this.bottom, 0.0D).tex((double)((float)this.left  / f), (double)((float)(this.bottom + (int)this.amountScrolled) / f)).color(32, 32, 32, 255).endVertex();
+            buffer.pos((double)this.right, (double)this.bottom, 0.0D).tex((double)((float)this.right / f), (double)((float)(this.bottom + (int)this.amountScrolled) / f)).color(32, 32, 32, 255).endVertex();
+            buffer.pos((double)this.right, (double)this.top,    0.0D).tex((double)((float)this.right / f), (double)((float)(this.top    + (int)this.amountScrolled) / f)).color(32, 32, 32, 255).endVertex();
+            buffer.pos((double)this.left,  (double)this.top,    0.0D).tex((double)((float)this.left  / f), (double)((float)(this.top    + (int)this.amountScrolled) / f)).color(32, 32, 32, 255).endVertex();
+            tessellator.draw();
+        }
+    
     public void handleMouseInput()
     {
         if (this.isMouseYWithinSlotBounds(this.mouseY))
         {
-            if (Mouse.getEventButton() == 0 && Mouse.getEventButtonState() && this.mouseY >= this.top && this.mouseY <= this.bottom)
+            if ((Mouse.getEventButton() == 0 && Mouse.getEventButtonState()) && this.mouseY >= this.top && this.mouseY <= this.bottom)
             {
                 int i = (this.width - this.getListWidth()) / 2;
                 int j = (this.width + this.getListWidth()) / 2;
@@ -335,7 +356,7 @@
                 }
             }
 
-            if (Mouse.isButtonDown(0) && this.getEnabled())
+            if ((Mouse.isButtonDown(0)  || GuiScreen.mouseDown) && this.getEnabled())
             {
                 if (this.initialClickY == -1)
                 {
@@ -408,7 +429,7 @@
                 this.initialClickY = -1;
             }
 
-            int i2 = Mouse.getEventDWheel();
+            int i2 = Mouse.getDWheel();
 
             if (i2 != 0)
             {
@@ -421,7 +442,7 @@
                     i2 = 1;
                 }
 
-                this.amountScrolled += (float)(i2 * this.slotHeight / 2);
+                this.amountScrolled += (float)(i2 * this.slotHeight);
             }
         }
     }
