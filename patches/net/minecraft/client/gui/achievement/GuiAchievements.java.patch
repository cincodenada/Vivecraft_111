--- a/net/minecraft/client/gui/achievement/GuiAchievements.java
+++ b/net/minecraft/client/gui/achievement/GuiAchievements.java
@@ -1,7 +1,11 @@
 package net.minecraft.client.gui.achievement;
 
 import java.io.IOException;
+import java.util.LinkedList;
+import java.util.List;
 import java.util.Random;
+import java.util.Set;
+
 import net.minecraft.block.Block;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiButton;
@@ -10,18 +14,25 @@
 import net.minecraft.client.gui.IProgressMeter;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.RenderHelper;
+import net.minecraft.client.renderer.GlStateManager.DestFactor;
+import net.minecraft.client.renderer.GlStateManager.SourceFactor;
 import net.minecraft.client.renderer.texture.TextureAtlasSprite;
 import net.minecraft.client.renderer.texture.TextureMap;
 import net.minecraft.client.resources.I18n;
 import net.minecraft.init.Blocks;
 import net.minecraft.network.play.client.CPacketClientStatus;
+import net.minecraft.src.Reflector;
 import net.minecraft.stats.Achievement;
 import net.minecraft.stats.AchievementList;
 import net.minecraft.stats.StatisticsManager;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.text.TextComponentTranslation;
+
 import org.lwjgl.input.Mouse;
+import org.lwjgl.opengl.GL11;
+
+import io.netty.handler.traffic.GlobalTrafficShapingHandler;
 
 public class GuiAchievements extends GuiScreen implements IProgressMeter
 {
@@ -45,6 +56,10 @@
     private int scrolling;
     private final StatisticsManager statFileWriter;
     private boolean loadingAchievements = true;
+    
+    private int currentPage = -1;
+    private GuiButton button;
+    private LinkedList<Achievement> minecraftAchievements = new LinkedList<Achievement>();
 
     public GuiAchievements(GuiScreen parentScreenIn, StatisticsManager statFileWriterIn)
     {
@@ -58,6 +73,16 @@
         this.yScrollTarget = (double)(AchievementList.OPEN_INVENTORY.displayRow * 24 - 70);
         this.yScrollO = this.yScrollTarget;
         this.yScrollP = this.yScrollTarget;
+        if (Reflector.forgeExists()) {
+	        minecraftAchievements.clear();
+	        for (Achievement achievement : AchievementList.ACHIEVEMENTS)
+	        {
+	            if (!Reflector.callBoolean(Reflector.AchievementPage_isAchievementInPages, achievement))
+	            {
+	                minecraftAchievements.add(achievement);
+	            }
+	        }
+        }
     }
 
     /**
@@ -69,6 +94,7 @@
         this.mc.getConnection().sendPacket(new CPacketClientStatus(CPacketClientStatus.State.REQUEST_STATS));
         this.buttonList.clear();
         this.buttonList.add(new GuiOptionButton(1, this.width / 2 + 24, this.height / 2 + 74, 80, 20, I18n.format("gui.done", new Object[0])));
+        if (Reflector.forgeExists()) this.buttonList.add(button = new GuiButton(2, (width - imageWidth) / 2 + 24, height / 2 + 74, 125, 20, Reflector.callString(Reflector.AchievementPage_getTitle, currentPage)));
     }
 
     /**
@@ -82,6 +108,16 @@
             {
                 this.mc.displayGuiScreen(this.parentScreen);
             }
+            
+            if (Reflector.forgeExists() && button.id == 2)
+            {
+                currentPage++;
+                if (currentPage >= ((Set)Reflector.call(Reflector.AchievementPage_getAchievementPages)).size())
+                {
+                    currentPage = -1;
+                }
+                this.button.displayString = Reflector.callString(Reflector.AchievementPage_getTitle, currentPage);
+            }
         }
     }
 
@@ -91,7 +127,7 @@
      */
     protected void keyTyped(char typedChar, int keyCode) throws IOException
     {
-        if (keyCode == this.mc.gameSettings.keyBindInventory.getKeyCode())
+        if ((Reflector.forgeExists() && Reflector.callBoolean(this.mc.gameSettings.keyBindInventory, Reflector.ForgeKeyBinding_isActiveAndMatches, keyCode)) || (!Reflector.forgeExists() && keyCode == this.mc.gameSettings.keyBindInventory.getKeyCode()))
         {
             this.mc.displayGuiScreen((GuiScreen)null);
             this.mc.setIngameFocus();
@@ -275,10 +311,13 @@
         int i1 = k + 16;
         int j1 = l + 17;
         this.zLevel = 0.0F;
+        
         GlStateManager.depthFunc(518);
         GlStateManager.pushMatrix();
         GlStateManager.translate((float)i1, (float)j1, -200.0F);
-        GlStateManager.scale(1.0F / this.zoom, 1.0F / this.zoom, 0.0F);
+        // FIXES models rendering weirdly in the acheivements pane
+        // see https://github.com/MinecraftForge/MinecraftForge/commit/1b7ce7592caafb760ec93066184182ae0711e793#commitcomment-10512284
+        GlStateManager.scale(1.0F / this.zoom, 1.0F / this.zoom, 1.0F);
         GlStateManager.enableTexture2D();
         GlStateManager.disableLighting();
         GlStateManager.enableRescaleNormal();
@@ -350,13 +389,18 @@
 
         GlStateManager.enableDepth();
         GlStateManager.depthFunc(515);
-        this.mc.getTextureManager().bindTexture(ACHIEVEMENT_BACKGROUND);
+        this.mc.getTextureManager().bindTexture(ACHIEVEMENT_BACKGROUND);      
 
-        for (int j5 = 0; j5 < AchievementList.ACHIEVEMENTS.size(); ++j5)
+        //VIVECRAFT fix transparency
+        GlStateManager.colorMask(true, true	,true, false);
+        //
+
+    	List<Achievement> achievementList = !Reflector.forgeExists() ? AchievementList.ACHIEVEMENTS : (currentPage == -1 ? minecraftAchievements : (List)Reflector.call(Reflector.call(Reflector.AchievementPage_getAchievementPage, currentPage), Reflector.AchievementPage_getAchievements));
+    	for (int j5 = 0; j5 < achievementList.size(); ++j5)
         {
-            Achievement achievement1 = (Achievement)AchievementList.ACHIEVEMENTS.get(j5);
+    		Achievement achievement1 = achievementList.get(j5);
 
-            if (achievement1.parentAchievement != null)
+    		if (achievement1.parentAchievement != null && (!Reflector.forgeExists() || achievementList.contains(achievement1.parentAchievement)))
             {
                 int k5 = achievement1.displayColumn * 24 - i + 11;
                 int l5 = achievement1.displayRow * 24 - j + 11;
@@ -409,10 +453,10 @@
         GlStateManager.disableLighting();
         GlStateManager.enableRescaleNormal();
         GlStateManager.enableColorMaterial();
-
-        for (int i6 = 0; i6 < AchievementList.ACHIEVEMENTS.size(); ++i6)
+       
+        for (int i6 = 0; i6 < achievementList.size(); ++i6)
         {
-            Achievement achievement2 = (Achievement)AchievementList.ACHIEVEMENTS.get(i6);
+        	Achievement achievement2 = achievementList.get(i6);
             int l6 = achievement2.displayColumn * 24 - i;
             int j7 = achievement2.displayRow * 24 - j;
 
@@ -453,6 +497,7 @@
 
                 this.mc.getTextureManager().bindTexture(ACHIEVEMENT_BACKGROUND);
 
+                GlStateManager.enableBlend(); // Forge: Specifically enable blend because it is needed here. And we fix Generic RenderItem's leakage of it.
                 if (achievement2.getSpecial())
                 {
                     this.drawTexturedModalRect(l6 - 2, j7 - 2, 26, 202, 26, 26);
@@ -461,6 +506,7 @@
                 {
                     this.drawTexturedModalRect(l6 - 2, j7 - 2, 0, 202, 26, 26);
                 }
+                GlStateManager.disableBlend(); //Forge: Cleanup states we set.
 
                 if (!this.statFileWriter.canUnlockAchievement(achievement2))
                 {
@@ -469,7 +515,7 @@
                     this.itemRender.isNotRenderingEffectsInGUI(false);
                 }
 
-                GlStateManager.enableLighting();
+                GlStateManager.disableLighting(); //Forge: Make sure Lighting is disabled. Fixes MC-33065
                 GlStateManager.enableCull();
                 this.itemRender.renderItemAndEffectIntoGUI(achievement2.theItemStack, l6 + 3, j7 + 3);
                 GlStateManager.blendFunc(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA);
@@ -493,6 +539,13 @@
         GlStateManager.enableBlend();
         GlStateManager.popMatrix();
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
+        
+        //VIVECRAFT fix transparency
+        GlStateManager.colorMask(true, true	,true, true);
+        GlStateManager.alphaFunc(GL11.GL_GREATER, 0);
+        GlStateManager.enableAlpha();
+        ///
+        
         this.mc.getTextureManager().bindTexture(ACHIEVEMENT_BACKGROUND);
         this.drawTexturedModalRect(k, l, 0, 0, this.imageWidth, this.imageHeight);
         this.zLevel = 0.0F;
